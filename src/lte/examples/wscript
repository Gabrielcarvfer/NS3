## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    obj = bld.create_ns3_program('lena-cqi-threshold',
                                 ['lte'])
    obj.source = 'lena-cqi-threshold.cc'
    obj = bld.create_ns3_program('lena-dual-stripe',
                                 ['lte'])
    obj.source = 'lena-dual-stripe.cc'
    obj = bld.create_ns3_program('lena-fading',
                                 ['lte'])
    obj.source = 'lena-fading.cc'
    obj = bld.create_ns3_program('lena-intercell-interference',
                                 ['lte'])
    obj.source = 'lena-intercell-interference.cc'
    obj = bld.create_ns3_program('lena-ipv6-addr-conf',
                                 ['lte'])
    obj.source = 'lena-ipv6-addr-conf.cc'
    obj = bld.create_ns3_program('lena-ipv6-ue-rh',
                                 ['lte'])
    obj.source = 'lena-ipv6-ue-rh.cc'
    obj = bld.create_ns3_program('lena-ipv6-ue-ue',
                                 ['lte'])
    obj.source = 'lena-ipv6-ue-ue.cc'
    obj = bld.create_ns3_program('lena-pathloss-traces',
                                 ['lte'])
    obj.source = 'lena-pathloss-traces.cc'
    obj = bld.create_ns3_program('lena-profiling',
                                 ['lte'])
    obj.source = 'lena-profiling.cc'
    obj = bld.create_ns3_program('lena-rem',
                                 ['lte'])
    obj.source = 'lena-rem.cc'
    obj = bld.create_ns3_program('lena-rem-sector-antenna',
                                 ['lte'])
    obj.source = 'lena-rem-sector-antenna.cc'
    obj = bld.create_ns3_program('lena-rlc-traces',
                                 ['lte'])
    obj.source = 'lena-rlc-traces.cc'
    obj = bld.create_ns3_program('lena-simple',
                                 ['lte'])
    obj.source = 'lena-simple.cc'
    obj = bld.create_ns3_program('lena-simple-epc',
                                 ['lte'])
    obj.source = 'lena-simple-epc.cc'
    obj = bld.create_ns3_program('lena-simple-epc-backhaul',
                                 ['lte'])
    obj.source = 'lena-simple-epc-backhaul.cc'
    obj = bld.create_ns3_program('lena-deactivate-bearer',
                                 ['lte'])
    obj.source = 'lena-deactivate-bearer.cc'
    obj = bld.create_ns3_program('lena-x2-handover',
                                 ['lte'])
    obj.source = 'lena-x2-handover.cc'
    obj = bld.create_ns3_program('lena-x2-handover-measures',
                                 ['lte'])
    obj.source = 'lena-x2-handover-measures.cc'
    obj = bld.create_ns3_program('lena-frequency-reuse',
                                 ['lte'])
    obj.source = 'lena-frequency-reuse.cc'
    obj = bld.create_ns3_program('lena-distributed-ffr',
                                 ['lte'])
    obj.source = 'lena-distributed-ffr.cc'
    obj = bld.create_ns3_program('lena-uplink-power-control',
                                 ['lte'])
    obj.source = 'lena-uplink-power-control.cc'

    obj = bld.create_ns3_program('lena-radio-link-failure',
                                 ['lte'])
    obj.source = 'lena-radio-link-failure.cc'
    
    if bld.env['ENABLE_EMU']:
        obj = bld.create_ns3_program('lena-simple-epc-emu',
                                     ['lte', 'fd-net-device'])
        obj.source = 'lena-simple-epc-emu.cc'
