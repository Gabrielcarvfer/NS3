name: CI

on: [push]

jobs:

  #Ubuntu:  #working
  #
  #  runs-on: ubuntu-latest
  #
  #  steps:
  #  - uses: actions/checkout@v1
  #  - name: Install required packages
  #    run: |
  #      sudo apt-get update
  #      sudo apt-get -y install apt-utils
  #      sudo apt-get -y install git gcc g++ cmake python make ninja-build
  #      sudo apt-get -y install qt5-default
  #      sudo apt-get -y install gdb valgrind
  #      sudo apt-get -y install tcpdump
  #      sudo apt-get -y install curl unzip tar
  #      sudo apt-get -y install ccache
  #  - name: Configure CMake
  #    run: |
  #      mkdir cmake-cache
  #      cd cmake-cache
  #      cmake -DCMAKE_BUILD_TYPE=RELEASE -G"Ninja" ..
  #  - name: Build ns-3
  #    run: |
  #      cd cmake-cache
  #      ninja
  #  -  name: Run tests
  #     run: |
  #       python3 ./utils/test-runner-script.py

  Windows_MinGW:   #not working

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install msys2/mingw64
      #steps from https://github.com/msys2/MINGW-packages/blob/master/azure-pipelines.yml
      run: |
        git clone https://github.com/msys2/msys2-ci-base.git %CD:~0,2%\msys64
        %CD:~0,2%\msys64\usr\bin\rm -rf %CD:~0,2%\msys64\.git
        set PATH=%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
        %CD:~0,2%\msys64\usr\bin\pacman --noconfirm -Syyuu
        set PATH=%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
        %CD:~0,2%\msys64\usr\bin\pacman --noconfirm --needed -S git base-devel
        %CD:~0,2%\msys64\usr\bin\pacman --noconfirm -Scc
    - name: Install required packages
      run: |
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm unzip
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm tar
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-curl
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-binutils
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-boost
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-cmake
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-gcc
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-ninja
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-gcc-libs
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-gcc-objc
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-gdb
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-make
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-python2
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-python3
        %CD:~0,2%\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-qt5
    - name: Configure CMake
      run: |
        set PATH=%CD:~0,2%\msys64\mingw64\bin;%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
        mkdir cmake-cache
        cd cmake-cache
        cmake -DCMAKE_BUILD_TYPE=RELEASE -G"Ninja" ..
    - name: Build ns-3
      run: |
        set PATH=%CD:~0,2%\msys64\mingw64\bin;%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
        cd cmake-cache
        ninja
    -  name: Run tests
       run: |
        set PATH=%CD:~0,2%\msys64\mingw64\bin;%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
        python3 ./utils/test-runner-script.py

  #Mac_OS_X:   #not working
  #
  #  runs-on: macos-latest
  #
  #  steps:
  #  - uses: actions/checkout@v1
  #  - name: Install required packages
  #    run: |
  #      sudo apt-get update
  #      sudo apt-get -y install apt-utils
  #      sudo apt-get -y install git gcc g++ cmake python make ninja-build
  #      sudo apt-get -y install qt5-default
  #      sudo apt-get -y install gdb valgrind
  #      sudo apt-get -y install tcpdump
  #      sudo apt-get -y install curl unzip tar
  #      sudo apt-get -y install ccache
  #  - name: Configure CMake
  #    run: |
  #      mkdir cmake-cache
  #      cd cmake-cache
  #      cmake -DCMAKE_BUILD_TYPE=RELEASE -G"Ninja" ..
  #  - name: Build ns-3
  #    run: |
  #      cd cmake-cache
  #      ninja
  #  -  name: Run tests
  #     run: |
  #       python3 ./utils/test-runner-script.py

  #Windows_Visual_Studio:   #not working
  #
  #  runs-on: windows-latest
  #
  #  steps:
  #  - uses: actions/checkout@v1
  #  - name: Install required packages
  #    run: |
  #      sudo apt-get update
  #      sudo apt-get -y install apt-utils
  #      sudo apt-get -y install git gcc g++ cmake python make ninja-build
  #      sudo apt-get -y install qt5-default
  #      sudo apt-get -y install gdb valgrind
  #      sudo apt-get -y install tcpdump
  #      sudo apt-get -y install curl unzip tar
  #      sudo apt-get -y install ccache
  #  - name: Configure CMake
  #    run: |
  #      mkdir cmake-cache
  #      cd cmake-cache
  #      cmake -DCMAKE_BUILD_TYPE=RELEASE -G"Ninja" ..
  #  - name: Build ns-3
  #    run: |
  #      cd cmake-cache
  #      ninja
  #  -  name: Run tests
  #     run: |
  #       python3 ./utils/test-runner-script.py


