name: CI

on: [push]
  #schedule:
#  - cron:  '0 5 * * *'  #daily build at 5AM
jobs:

  Ubuntu:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get -y install apt-utils
          sudo apt-get -y install git gcc g++ cmake python make ninja-build
          sudo apt-get -y install qt5-default
          sudo apt-get -y install gdb valgrind
          sudo apt-get -y install tcpdump
          sudo apt-get -y install curl unzip tar
          sudo apt-get -y install ccache
      - name: Configure CMake
        run: |
          mkdir cmake-cache
          cd cmake-cache
          cmake -DCMAKE_BUILD_TYPE=RELWITHDEBINFO -DNS3_EXAMPLES=ON -DNS3_TESTS=ON -G"Ninja"  ..
      - name: Build ns-3
        run: |
          cd cmake-cache
          ninja
      -  name: Run tests
         run: python3 ./utils/test-runner-script.py
      -  name: Run examples
         run : |
           cd cmake-cache
           ctest -j 4 --timeout 600

  Windows_MinGW:

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install msys2/mingw64
        #steps from https://github.com/msys2/MINGW-packages/blob/master/azure-pipelines.yml
        run: |
          git clone https://github.com/msys2/msys2-ci-base.git D:\msys64
          D:\msys64\usr\bin\rm -rf D:\msys64\.git
          set PATH=D:\msys64\usr\bin;%WINDIR%;%WINDIR%\System32
          D:\msys64\usr\bin\pacman --noconfirm -Syyuu
          set PATH=D:\msys64\usr\bin;%WINDIR%;%WINDIR%\System32
          D:\msys64\usr\bin\pacman --noconfirm --needed -S git base-devel
          D:\msys64\usr\bin\pacman --noconfirm -Scc
        shell: cmd
      - name: Install required msys2/mingw64 packages
        run: |
          set PATH=C:\msys64\usr\bin;%WINDIR%;%WINDIR%\System32
          pacman -S --noconfirm unzip
          pacman -S --noconfirm tar
          pacman -S --noconfirm mingw-w64-x86_64-curl
          pacman -S --noconfirm mingw-w64-x86_64-binutils
          pacman -S --noconfirm mingw-w64-x86_64-boost
          pacman -S --noconfirm mingw-w64-x86_64-cmake
          pacman -S --noconfirm mingw-w64-x86_64-gcc
          pacman -S --noconfirm mingw-w64-x86_64-ninja
          pacman -S --noconfirm mingw-w64-x86_64-gcc-libs
          pacman -S --noconfirm mingw-w64-x86_64-gcc-objc
          pacman -S --noconfirm mingw-w64-x86_64-gdb
          pacman -S --noconfirm mingw-w64-x86_64-make
          pacman -S --noconfirm mingw-w64-x86_64-python2
          pacman -S --noconfirm mingw-w64-x86_64-python3
          pacman -S --noconfirm mingw-w64-x86_64-qt5
          pacman -S --noconfirm mingw-w64-x86_64-ccache
          pacman --noconfirm -Scc
        shell: cmd
      - name: Configure CMake
        run: |
          set PATH=C:\msys64\mingw64\bin;C:\msys64\usr\bin;%WINDIR%;%WINDIR%\System32
          mkdir cmake-cache
          cd cmake-cache
          cmake -DCMAKE_BUILD_TYPE=RELWITHDEBINFO -DNS3_EXAMPLES=ON -DNS3_TESTS=ON -G"Ninja" -DAUTOINSTALL_DEPENDENCIES=ON ..
        shell: cmd
      - name: Build ns-3
        run: |
          set PATH=C:\msys64\mingw64\bin;C:\msys64\usr\bin;%WINDIR%;%WINDIR%\System32
          cd cmake-cache
          ninja
        shell: cmd
      - name: Run tests
        run: |
          set PATH=C:\msys64\mingw64\bin;C:\msys64\usr\bin;%WINDIR%;%WINDIR%\System32
          python3 ./utils/test-runner-script.py
        shell: cmd
      -  name: Run examples
         run : |
           cd cmake-cache
           ctest -j 4 --timeout 600
         shell: cmd
  Mac_OS_X:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install required packages
        run: |
          brew install ninja cmake qt5 gcc@9
      - name: Configure CMake
        run: |
          export PATH=/usr/local/bin:/usr/local/opt/qt/bin:$PATH
          export CXX=g++-9
          export CC=gcc-9
          mkdir cmake-cache
          cd cmake-cache
          cmake -DCMAKE_BUILD_TYPE=RELWITHDEBINFO -DNS3_EXAMPLES=ON -DNS3_TESTS=ON -G"Ninja" ..
      - name: Build ns-3
        run: |
          export PATH="/usr/local/opt/qt/bin:$PATH"
          cd cmake-cache
          ninja
      -  name: Run tests
         run: |
           python3 ./utils/test-runner-script.py
      -  name: Run examples
         run : |
           cd cmake-cache
           ctest -j 4 --timeout 600
    #  - name: Clean release with debug artifacts
    #    run: |
    #      rm -Rf ../build
    #      rm -Rf ./*
    #      rm -Rf ../3rd-party/vcpkg
    #      rm ../utils/failed-tests.json

  #Windows_Visual_Studio:   #not working
  #
  #  runs-on: windows-latest
  #
  #  steps:
  #  - uses: actions/checkout@v1
  #  - name: Install required packages
  #    run: |
  #      ????
  #  - name: Configure CMake
  #    run: |
  #      %comspec% /k "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat"
  #      mkdir cmake-cache
  #      cd cmake-cache
  #      cmake -DCMAKE_BUILD_TYPE=RELEASE -G"Ninja" ..
  #  - name: Build ns-3
  #    run: |
  #      %comspec% /k "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat"
  #      cd cmake-cache
  #      ninja
  #  -  name: Run tests
  #     run: |
  #       python3 ./utils/test-runner-script.py


